多版本管理工具
https://github.com/moovweb/gvm

语言下载地址
https://golang.google.cn/dl/

-------------------- gvm
目录结构
archive             # go 源码
bin                 # gvm 可执行文件
environments        # 不同环境的环境变量配置
scripts             # gvm 的子命令脚本
logs                # 日志信息
pkgsets             # 每个独立环境 gopath 所在路径

1. 安装依赖
install curl git mercurial make binutils bison gcc build-essential

2. 安装
bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)

3. 命令
gvm list                已安装的版本
gvm listall             可安装的版本
gvm install go1.8.7     安装指定版本
gvm uninstall go1.13    卸载
gvm version             版本信息
gvm use xxxx            切换版本(临时)
gvm use go1.12 --default切换版本(永久)


4. 安装下载很慢解决办法
    下载 go1.8.7.linux-amd64.tar.gz 放入archive中
    再执行安装 gvm install go1.8.7 -B 


-------------------- go get
1. 速度慢
# 启用 Go Modules 功能
export GO111MODULE=on
# 配置 GOPROXY 环境变量
export GOPROXY=https://mirrors.aliyun.com/goproxy/

2. 下载的包再 GOPATH 路径下



-------------------- gopm
使用gopm代替 go get
gopm 下载存放缓存目录 $USER/.gopm/repos
安装 gopm
go get -u github.com/gpmgo/gopm


命令:
# 查看当前工程依赖
gopm list
# 显示依赖详细信息
gopm list -v
# 列出文件依赖
gopm list -t [file]
# 拉取依赖到缓存目录
gopm get -r xxx
# 仅下载当前指定的包
gopm get -d xxx
# 拉取依赖到$GOPATH
gopm get -g xxx
# 检查更新所有包
gopm get -u xxx
# 拉取到当前所在目录
gopm get -l xxx
# 运行当前目录程序
gopm run
# 生成当前工程的 gopmfile 文件用于包管理
gopm gen -v
# 根据当前项目 gopmfile 链接依赖并执行 go install
gopm install -v
# 更新当前依赖
gopm update -v
# 清理临时文件
gopm clean
# 编译到当前目录
gopm bin

-------------------- go 命令
go env          查看环境变量








